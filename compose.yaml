version: "3.9"

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"   
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network 

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:80"
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 1234
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:80"   # host:container
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: "http://backend:80"
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
